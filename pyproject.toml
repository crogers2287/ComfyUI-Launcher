[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "comfyui-launcher"
version = "0.1.0"
description = "A bulletproof launcher for ComfyUI with dependency management"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "ComfyUI Launcher Team", email = "dev@comfyui-launcher.io"}
]
dependencies = [
    "flask>=2.3.0",
    "flask-cors>=4.0.0",
    "celery>=5.3.0",
    "redis>=5.0.0",
    "requests>=2.31.0",
    "pyyaml>=6.0",
    "tqdm>=4.66.0",
    "websocket-client>=1.6.0",
    "python-socketio>=5.9.0",
    "aiohttp>=3.8.0",
    "psutil>=5.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0",
    "mypy>=1.5.0",
    "ruff>=0.1.0",
    "black>=23.7.0",
    "pre-commit>=3.3.0",
]

[project.scripts]
comfyui-launcher = "backend.src.launcher:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["backend*", "shared*"]

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["backend/tests", "tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "--strict-markers",
    "--tb=short",
    "--cov=backend.src",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml:coverage.xml",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "backend.src.*"
ignore_errors = false

[tool.ruff]
target-version = "py311"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "D",  # pydocstyle
    "UP", # pyupgrade
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "S",  # flake8-bandit
    "T20", # flake8-print
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "PTH", # flake8-use-pathlib
]
ignore = [
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D107", # Missing docstring in __init__
    "D203", # 1 blank line required before class docstring
    "D213", # Multi-line docstring summary should start at the second line
]
exclude = [
    ".git",
    "__pycache__",
    "dist",
    "build",
    ".venv",
    "launcher_venv",
    "projects",
]

[tool.ruff.per-file-ignores]
"backend/tests/*" = ["S101", "D"]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.git
  | __pycache__
  | \.venv
  | launcher_venv
  | build
  | dist
  | projects
)/
'''